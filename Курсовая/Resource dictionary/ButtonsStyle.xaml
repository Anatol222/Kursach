<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style TargetType="Button" x:Key="VkBtn">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Ellipse Cursor="Hand">
                            <Ellipse.Fill>
                                <ImageBrush ImageSource="/Images/vk.png"/>
                            </Ellipse.Fill>
                        </Ellipse>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="1.2" ScaleY="1.2"></ScaleTransform>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Button" x:Key="InstBtn">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Ellipse Cursor="Hand">
                            <Ellipse.Fill>
                                <ImageBrush ImageSource="/Images/instagram.png"/>
                            </Ellipse.Fill>
                        </Ellipse>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="1.2" ScaleY="1.2"></ScaleTransform>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Button" x:Key="TelBtn">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Ellipse Cursor="Hand">
                            <Ellipse.Fill>
                                <ImageBrush ImageSource="/Images/telegram.png"/>
                            </Ellipse.Fill>
                        </Ellipse>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="1.2" ScaleY="1.2"></ScaleTransform>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Button" x:Key="EmailBtn">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Rectangle Cursor="Hand">
                            <Rectangle.Fill>
                                <ImageBrush ImageSource="/Images/email.png"/>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="1.2" ScaleY="1.2"></ScaleTransform>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Button" x:Key="CloseBtn">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Rectangle Cursor="Hand">
                            <Rectangle.Fill>
                                <ImageBrush ImageSource="/Images/cancel.png"/>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="1.02" ScaleY="1.02"></ScaleTransform>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Button" x:Key="MinimiseBtn">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Rectangle Cursor="Hand">
                            <Rectangle.Fill>
                                <ImageBrush ImageSource="/Images/minimize.png"/>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="1.02" ScaleY="1.02"></ScaleTransform>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Button" x:Key="CollapseBtn">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Rectangle Cursor="Hand">
                            <Rectangle.Fill>
                                <ImageBrush ImageSource="/Images/minimize-sign.png"/>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="1.02" ScaleY="1.02"></ScaleTransform>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Button" x:Key="InfoBtn">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Rectangle Cursor="Hand">
                            <Rectangle.Fill>
                                <ImageBrush ImageSource="/Images/information-button.png"/>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="1.02" ScaleY="1.02"></ScaleTransform>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <ControlTemplate TargetType="Button" x:Key="MaxMinBtn">
        <Border x:Name="buttonBorder"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}">

            <ContentControl Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Content="{TemplateBinding Content}">
            </ContentControl>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="1.1" ScaleY="1.1"></ScaleTransform>
                    </Setter.Value>
                </Setter>
                <Setter Property="FontWeight" Value="Bold" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="1" ScaleY="1"></ScaleTransform>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="buttonBorder" Property="Background" Value="transparent" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="TransparentBtnStyle" TargetType="Button">
        <Style.Triggers >
            <Trigger  Property="IsMouseOver" Value="True">
                <Setter Property="FontWeight" Value="Bold"></Setter>
            </Trigger>
        </Style.Triggers>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontStyle" Value="Normal"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontSize" Value="16"></Setter>
        <Setter Property="FontFamily" Value="Tahoma"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="TemplateBorder" 
                            RenderTransformOrigin="0.5,0.5"
                            BorderBrush="{StaticResource BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Border.Background>
                            <SolidColorBrush x:Name="BtnBgColor" Color="{StaticResource MouseLeave}"/>
                        </Border.Background>
                        <ContentPresenter VerticalAlignment="Center"
                                          HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsEnabled" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard x:Name="EnterMouse">
                                        <ColorAnimation Storyboard.TargetName="BtnBgColor"
                                                        Storyboard.TargetProperty="Color"
                                                        To="{StaticResource MouseOver}"
                                                        Duration="0:0:0:0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard x:Name="LeaveMouse">
                                        <ColorAnimation Storyboard.TargetName="BtnBgColor"
                                                        Storyboard.TargetProperty="Color"
                                                        To="{StaticResource MouseLeave}"
                                                        Duration="0:0:0:0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Border" x:Key="ProfileBorder">
        <Setter Property="MaxHeight" Value="40"></Setter>
        <Setter Property="MinHeight" Value="20"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="CornerRadius" Value="20"></Setter>
        <Setter Property="Padding" Value="10"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Background" Value="AliceBlue"></Setter>
    </Style>
    <Style TargetType="Button" x:Key="GenderBtn">
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Background" Value="#ebe7a4"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="border" BorderThickness="0" BorderBrush="Black" Background="{TemplateBinding Background}" CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderThickness" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Button" x:Key="ChangePassBtn">
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Background" Value="#ebe7a4"></Setter>
        <Setter Property="FontSize" Value="16"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Padding" Value="5"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Stretch"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="border" BorderThickness="1" BorderBrush="Black" Background="{TemplateBinding Background}" CornerRadius="15">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1.01" ScaleY="1.01"></ScaleTransform>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="0.1"></DropShadowEffect>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--ScrollBar-->
    <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid x:Name="Grid" Width="8">
                        <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" 
                                           Height="Auto" Fill="Transparent"/>
                        <Border x:Name="Rectangle1" CornerRadius="10 10 10 10" HorizontalAlignment="Stretch" 
                                        VerticalAlignment="Stretch" Width="Auto" Height="Auto" 
                                        Background="{TemplateBinding Background}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="Horizontal">
                            <Setter TargetName="Rectangle1" Property="Width" Value="Auto"/>
                            <Setter TargetName="Rectangle1" Property="Height" Value="7"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--SCROLLBARS-->
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Foreground" Value="Gray"/>
        <Setter Property="Background" Value="DarkGray"/>
        <Setter Property="Width" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="GridRoot" Width="12" Background="{x:Null}">
                        <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="False">
                            <Track.Thumb>
                                <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" 
                                               Style="{DynamicResource ScrollThumbs}"/>
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="False"/>
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="False"/>
                            </Track.DecreaseRepeatButton>
                        </Track>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                            <Setter Value="LightGray" 
                                            TargetName="Thumb" Property="Background"/>
                        </Trigger>
                        <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                            <Setter Value="DarkGray" TargetName="Thumb" Property="Background"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="GridRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Width" Value="Auto"/>
                            <Setter Property="Height" Value="12"/>
                            <Setter TargetName="Thumb" Property="Tag" Value="Horizontal"/>
                            <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand"/>
                            <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	<Style x:Key="FocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
	<SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
	<SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
	<SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
	<SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
	<SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
	<SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
	<SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
	<SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
	<Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
		<Setter Property="Background" Value="CadetBlue"/>
		<Setter Property="Foreground" Value="LightCyan"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="FontFamily" Value="Ariel"/>
		<Setter Property="FontSize" Value="18"/>
		<Setter Property="FontStyle" Value="Normal"/>
		<Setter Property="FontWeight" Value="Bold"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="border" CornerRadius="20" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
						<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsDefaulted" Value="true">
							<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Background" TargetName="border" Value="#78a9cc"/>
							<Setter Property="BorderBrush" TargetName="border" Value="#78a9cc"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Background" TargetName="border" Value="#78a9cc"/>
							<Setter Property="BorderBrush" TargetName="border" Value="#78a9cc"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
							<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
							<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>